{"version":3,"sources":["Styles/img/sprite.svg","Store/actions/authAction.js","Store/actions/actionTypes.js","axios.js","Store/actions/storiesAction.js","Store/actions/modalAction.js","User/Component/loginForm.js","User/Component/signupForm.js","User/Pages/login.js","Home/components/storyCard.js","Utilities/spinner.js","Home/components/storyModel.js","Utilities/backdrop.js","Utilities/modal.js","Hoc/withErrorHandler.js","Utilities/useHttp-error-handler.js","Home/pages/stories.js","Home/components/profileEditModel.js","Utilities/firebase.js","Utilities/imageUpload.js","Home/pages/profile.js","Router/publicRoute.js","Header/navigation.js","Router/privateRoute.js","Home/pages/notFoundPage.js","App.js","serviceWorker.js","Store/utility.js","Store/reducers/modalReducer.js","Store/reducers/authReducer.js","Store/reducers/storiesReducer.js","index.js"],"names":["module","exports","authSuccess","token","userId","userName","type","idToken","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","isSignup","fullName","authData","displayName","returnSecureToken","url","axios","post","then","response","expirationDate","Date","getTime","data","expiresIn","setItem","localId","userData","coverQuote","bio","location","urlUserData","catch","console","log","err","message","instance","create","baseURL","fetchingStory","get","res","stories","Object","keys","map","key","userStoryId","fetchingStoryFail","fetchUserProfile","queryParams","userStory","userStoryError","fetchingUserStoryFail","userDataId","userDataError","fetchingUserDataFail","postingFailed","editProfile","userProfile","patch","updateProfile","updatedProfile","connect","state","login","form","actions","props","useState","setEmail","setPassword","className","onSubmit","event","preventDefault","placeholder","value","onChange","target","onClick","loginToogle","signup","setFullName","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","useEffect","trim","fullname","confirmpassword","Login","isLogin","setIslogin","isLoginHnandler","loginPage","storyCard","postEditor","card","title","href","sprite","body","profileViewer","spinner","loading","modal","show","postStory","story","addedPost","name","deletePost","storyId","delete","editPost","updatedPost","updatedStory","closeModal","privacy","setStory","ValidationMessage","setValidationMessage","inputChangeHandler","e","identifier","checkboxHandler","checked","postStoryHandler","valid","validation","deletePostHandler","deletePostButton","style","visibility","checkBoxButton","postButton","opacity","transition","minRows","maxRows","backdrop","clicked","Fragment","modalClosed","transform","children","withErrorHandler","WrappedComponent","httpClient","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","Promise","reject","eject","useHttpErrorHandler","clearError","storiesArray","storyModalReset","fetchStories","storyModalOpen","storyModal","setStoryModal","ProfileHandler","uid","history","push","postEditorHandler","setStories","storyCards","storyCol1","storyCol2","storyCol3","length","publicStories","filter","forEach","i","f","s","fe","total","each","left","Math","floor","ss","se","divideStories","profileEditModel","cancel","save","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","loggedInUser","image","userPic","updateProfilePic","useProfile","previewUrl","setPreviewUrl","file","setFile","filePickerRef","useRef","uploadHandler","useCallback","ref","put","on","snapshot","child","getDownloadURL","fileReader","FileReader","onload","result","readAsDataURL","src","alt","id","display","accept","pickedFile","files","current","click","loggedInUserId","loadingUserStory","loadingUserData","errorUserStory","errorUserData","coverQuotePrev","bioPrev","locationPrev","coverQuoteDisplay","bioDisplay","locationDisplay","profileDetails","setProfileDetails","handleEditFormDisplay","toEdit","toEditDisplay","cancelEditHandler","toCancel","toCancelDisplay","toCancelPrev","saveEditHandler","toSave","toSaveDisplay","viewProfileHandler","match","params","isAuthenticated","Component","component","rest","to","notFoundPage","onTryAutoSignup","getItem","routes","path","exact","Stories","Profile","NotFoundPage","Boolean","window","hostname","updateObject","oldObject","updatedProperties","intialState","postStart","action","postSucced","postFailed","modalClose","modalOpen","reducer","authStart","authLogout","authRedirectPath","fetchingStart","fetchingSuccess","fetchingFailed","fetchUserDataSuccess","fetchUserStorySuccess","fetchUserDataFail","fetchUserStoryFail","fetchUserDataStart","fetchUserStoryStart","addedStory","concat","deletedStory","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","modalReducer","storiesReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cfdbd74.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sprite.417b38a5.svg\";","import axios from \"axios\";\r\n\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId, userName) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId,\r\n    userName: userName,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"userId\");\r\n  localStorage.removeItem(\"userName\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const auth = ({ email, password, isSignup, fullName }) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      displayName: fullName,\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n    const urlUserData = \"https://storyclub-734f8.firebaseio.com/users.json\";\r\n\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBzOU2zSdEfJJ2fBMR3piZK9jH_q6g9nPQ\";\r\n    if (!isSignup) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBzOU2zSdEfJJ2fBMR3piZK9jH_q6g9nPQ\";\r\n    }\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n        localStorage.setItem(\"userName\", response.data.displayName);\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n        // console.log(response.data)\r\n        if (isSignup) {\r\n          const userData = {\r\n            fullName: fullName,\r\n            coverQuote: \"cannot praise yourself ...\",\r\n            bio: \"Works at XYZ Company\",\r\n            location: \"Enter Your Location\",\r\n            userId: response.data.localId,\r\n          };\r\n          axios\r\n            .post(urlUserData + \"?auth=\" + response.data.idToken, userData)\r\n            .then((response) => {\r\n              // console.log(response.data, \"data saved Successfully\", userData);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if(!!err.response){\r\n        dispatch(authFail(err.response.data.error.message));\r\n        }else{\r\n        dispatch(authFail(err.message));\r\n        }\r\n        // console.log(!!err.response,err.response.data.error)        \r\n      });\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        const userName = localStorage.getItem(\"userName\");\r\n        dispatch(authSuccess(token, userId, userName));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const AUTH_REDIRECT_PATH='AUTH_REDIRECT_PATH';\r\n\r\nexport const FETCHING_STORY_START='FETCHING_STORY_START';\r\nexport const FETCHING_STORY_FAIL='FETCHING_STORY_FAIL';\r\nexport const FETCHING_STORY_SUCCESS='FETCHING_STORY_SUCCESS';\r\n\r\nexport const POSTING_STORY_START='POSTING_STORY_START';\r\nexport const POSTING_STORY_FAIL='POSTING_STORY_FAIL';\r\nexport const POSTING_STORY_SUCCESS='POSTING_STORY_SUCCESS';\r\n\r\nexport const MODAL_CLOSE='MODAL_CLOSE';\r\nexport const MODAL_OPEN='MODAL_OPEN';\r\n\r\nexport const FETCH_USER_STORY_START='FETCH_USER_STORY_START';\r\nexport const FETCH_USER_STORY_FAIL='FETCH_USER_STORY_FAIL';\r\nexport const FETCH_USER_STORY_SUCCESS='FETCH_USER_STORY_SUCCESS';\r\n\r\nexport const FETCH_USER_DATA_START='FETCH_USER_DATA_START';\r\nexport const FETCH_USER_DATA_SUCCESS='FETCH_USER_DATA_SUCCESS';\r\nexport const FETCH_USER_DATA_FAIL='FETCH_USER_DATA_FAIL';\r\n\r\n\r\nexport const UPDATED_STORY='UPDATED_STORY';\r\nexport const ADDED_STORY='ADDED_STORY';\r\nexport const DELETED_STORY='DELETED_STORY';\r\nexport const UPDATED_PROFILE='UPDATED_PROFILE';\r\n\r\n// export const DELETING_STORY_START='DELETING_STORY_START';\r\n// export const DELETING_STORY_FAIL='DELETING_STORY_FAIL';\r\n// export const DELETING_STORY_SUCCESS='DELETING_STORY_SUCCESS';\r\n\r\n// export const FETCHING_USER_PROFILE_START='FETCHING_USER_PROFILE_START';\r\n// export const FETCHING_USER_PROFILE_FAIL='FETCHING_USER_PROFILE_FAIL';\r\n// export const FETCHING_USER_PROFILE_SUCCESS='FETCHING_USER_PROFILE_SUCCESS';\r\n\r\n","import axios from 'axios';\r\n\r\nconst instance= axios.create({\r\n    baseURL:'https://storyclub-734f8.firebaseio.com/'\r\n})\r\n\r\nexport default instance;\r\n\r\n","import axios from \"../../axios\";\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\n\r\nexport const fetchingStoryStart = () => {\r\n  return {\r\n    type: actionTypes.FETCHING_STORY_START,\r\n  };\r\n};\r\n\r\nexport const fetchingStorySuccess = (stories) => {\r\n  let storiesArray = Object.keys(stories).map((key) => {\r\n    return { ...stories[key], userStoryId: key };\r\n  });\r\n\r\n  return {\r\n    type: actionTypes.FETCHING_STORY_SUCCESS,\r\n    stories: storiesArray,\r\n  };\r\n};\r\n\r\nexport const fetchingStoryFail = (err) => {\r\n  return {\r\n    type: actionTypes.FETCHING_STORY_FAIL,\r\n    error: err,\r\n  };\r\n};\r\n\r\nexport const fetchingStory = (token) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchingStoryStart());\r\n    axios\r\n      .get(\"/stories.json?auth=\" + token)\r\n      .then((res) => {\r\n        dispatch(fetchingStorySuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(fetchingStoryFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchingUserStorySucced = (stories) => {\r\n  let userStoriesArray = Object.keys(stories).map((key) => {\r\n    return { ...stories[key], userStoryId: key };\r\n  });\r\n  return {\r\n    type: actionTypes.FETCH_USER_STORY_SUCCESS,\r\n    userStory: userStoriesArray,\r\n  };\r\n};\r\nexport const fetchingUserDataSucced = (stories) => {\r\n  let userDataArray = Object.keys(stories).map((key) => {\r\n    return { ...stories[key], userDataId: key };\r\n  }); \r\n  return {\r\n    type: actionTypes.FETCH_USER_DATA_SUCCESS,\r\n    userData: userDataArray[0],\r\n  };\r\n};\r\nexport const fetchingUserStoryStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_USER_STORY_START,\r\n  };\r\n};\r\nexport const fetchingUserStoryFail = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_USER_STORY_FAIL,\r\n    userStoryError: error,\r\n  };\r\n};\r\nexport const fetchingUserDataStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_USER_DATA_START,\r\n  };\r\n};\r\nexport const fetchingUserDataFail = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_USER_DATA_FAIL,\r\n    userDataError: error,\r\n  };\r\n};\r\nexport const fetchUserProfile = (userId, token) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchingUserStoryStart());\r\n    dispatch(fetchingUserDataStart());\r\n    const queryParams =\r\n      \"?auth=\" + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n    axios\r\n      .get(\"/stories.json\" + queryParams)\r\n      .then((response) => {\r\n        dispatch(fetchingUserStorySucced(response.data));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(fetchingUserStoryFail(error));\r\n      });\r\n    axios\r\n      .get(\"/users.json\" + queryParams)\r\n      .then((response) => {\r\n        dispatch(fetchingUserDataSucced(response.data));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(fetchingUserDataFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const deletedStory=(storyId)=>{\r\n  return{\r\n      type:actionTypes.DELETED_STORY,\r\n      storyId,\r\n  }\r\n}\r\nexport const updatedStory=(story)=>{\r\n  return{\r\n      type:actionTypes.UPDATED_STORY,\r\n      updatedStory:story,\r\n  }\r\n}\r\nexport const addedStory=(addedPost)=>{\r\n  return{\r\n      type:actionTypes.ADDED_STORY,\r\n      addedPost:addedPost,\r\n  }\r\n}\r\nexport const updatedProfile=(updatedProfile)=>{\r\n  return{\r\n      type:actionTypes.UPDATED_PROFILE,\r\n      updatedProfile,\r\n  }\r\n}\r\n","import axios from \"../../axios\";\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\nimport * as actions from '../actions/index';\r\n\r\nexport const postingStart = () => {\r\n  return {\r\n    type: actionTypes.POSTING_STORY_START,\r\n  };\r\n};\r\n\r\nexport const postingSucceded = () => {\r\n  return {\r\n    type: actionTypes.POSTING_STORY_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const postingFailed = (error) => {\r\n  return {\r\n    type: actionTypes.POSTING_STORY_FAIL,\r\n    error: error,\r\n  };\r\n};\r\nexport const modalClose = () => {\r\n  return {\r\n    type: actionTypes.MODAL_CLOSE,\r\n  };\r\n};\r\nexport const modalOpen = () => {\r\n  return {\r\n    type: actionTypes.MODAL_OPEN,\r\n  };\r\n};\r\n\r\nexport const postingStory = (story, token) => {\r\n  return (dispatch) => {\r\n    dispatch(postingStart());\r\n    axios\r\n      .post(\"/stories.json?auth=\" + token, story)\r\n      .then((res) => {\r\n          let addedPost={\r\n              ...story,\r\n              userStoryId:res.data.name,\r\n          }; \r\n        //   console.log(addedStory)\r\n        dispatch(postingSucceded());\r\n        dispatch(actions.addedStory(addedPost))\r\n        // console.log(res.data,'post')\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch(postingFailed(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const patchStory = (story, storyId, token) => {\r\n  return (dispatch) => {\r\n    dispatch(postingStart());\r\n    axios\r\n      .patch(\"/stories/\" + storyId + \".json?auth=\" + token, story)\r\n      .then((res) => {\r\n        let updatedPost={\r\n            ...story,\r\n            userStoryId:storyId,\r\n        }; \r\n          dispatch(postingSucceded())\r\n          dispatch(actions.updatedStory(updatedPost))\r\n        // console.log(updatedPost,\"patch\");\r\n      })\r\n      .catch((error) => {\r\n          dispatch(postingFailed(error))\r\n        // console.log(error);\r\n      });\r\n  };\r\n};\r\nexport const deleteStory = (storyId, token) => {\r\n  return (dispatch) => {\r\n    dispatch(postingStart());\r\n    axios\r\n      .delete(\"/stories/\" + storyId + \".json?auth=\" + token)\r\n      .then((res) => {\r\n        dispatch(postingSucceded())\r\n        dispatch(actions.deletedStory(storyId))\r\n        // console.log(res.data, \"deleted\");\r\n      })\r\n      .catch((error) => {\r\n        dispatch(postingFailed(error))       \r\n        // console.log(error, \"error\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const editProfile = (userId, token, userProfile) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .patch(\"users/\" + userId + \".json?auth=\" + token, userProfile)\r\n      .then((res) => {\r\n        let updateProfile={\r\n            ...userProfile,\r\n            // userId:userId,\r\n        }; \r\n          dispatch(actions.updatedProfile(updateProfile))\r\n        // console.log(userId,updateProfile,res.data,'updatedProfile');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n","import React,{useState} from 'react'\r\nimport{connect} from 'react-redux';\r\n\r\nimport * as actions from '../../Store/actions/index';\r\n\r\nfunction LoginForm(props) {\r\n\r\n    const[email,setEmail]=useState('');\r\n    const[password,setPassword]=useState('');\r\n\r\n    const submitHandler=(event)=>{\r\n        event.preventDefault()\r\n        let form={\r\n            email:email,\r\n            password:password,\r\n            isSignup:false,\r\n        }\r\n        props.login(form);\r\n    }\r\n    const emailHandler=(event)=>{\r\n        setEmail(event.target.value);\r\n    }\r\n    const passwordHandler=(event)=>{\r\n        setPassword(event.target.value);\r\n    }\r\n    return (\r\n        <div className='box-layout__box'>\r\n            <h1 className='heading-1 title'>Story Club</h1>\r\n            <p className='heading-3'>Get Started - It's free</p>\r\n            <p className=\"error\">{props.error}</p>\r\n            <form className='form' onSubmit={submitHandler}>\r\n                <input  className='text-input' placeholder='E-mail' email='email' value={email} type='email' onChange={emailHandler} />\r\n                <input className='text-input' placeholder='Password' password='password' value={password} type='password' onChange={passwordHandler} />\r\n                <button className='btn-primary'>Login</button>\r\n            </form>\r\n            <div className=\"heading-3\">\r\n                Need an account? &nbsp;\r\n                <span>\r\n                    <button className=\"simple-text-button\" onClick={props.loginToogle}>sign up</button>\r\n                </span>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        error:state.auth.error,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        login:(form)=>dispatch(actions.auth(form)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LoginForm);\r\n","import React, { useState } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport * as actions from '../../Store/actions/index';\r\nimport { useEffect } from 'react';\r\n\r\nfunction SignupForm(props) {\r\n    const[fullName,setFullName]=useState('');\r\n    const[email,setEmail]=useState('');\r\n    const[password,setPassword]=useState('');\r\n    const[confirmPassword,setConfirmPassword]=useState('');\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    const submitHandler=(event)=>{\r\n        event.preventDefault()\r\n        let form={\r\n            fullName:fullName,\r\n            email:email,\r\n            password:password,\r\n            confirmPassword:confirmPassword,\r\n            isSignup:true,\r\n        };\r\n        if(password===confirmPassword && fullName.trim()!==''){\r\n        props.signup(form);\r\n        }else if(password!==confirmPassword){\r\n            setErrorMessage(\"Password doesn't match\")\r\n        }else{\r\n            setErrorMessage(\"Please enter your name\")\r\n        }\r\n        // console.log(form);\r\n    }\r\n    const fullNameHandler=(event)=>{\r\n        setFullName(event.target.value)\r\n    }\r\n    const emailHandler=(event)=>{\r\n        setEmail(event.target.value);\r\n    }\r\n    const passwordHandler=(event)=>{\r\n        setPassword(event.target.value);\r\n    }\r\n    const confirmPasswordHandler=(event)=>{\r\n        setConfirmPassword(event.target.value);\r\n    }\r\n\r\n    const {error}=props\r\n    useEffect(()=>{\r\n        setErrorMessage(error)\r\n    },[error])\r\n    return (\r\n        <div className='box-layout__box'>\r\n            <h1 className='heading-1 title'>Story Club</h1>\r\n            <p className='heading-3'>Get Started - It's free</p>\r\n            <p className=\"error\">{errorMessage}</p>\r\n            <form className='form' onSubmit={submitHandler}>\r\n                <input  className='text-input' placeholder='Full Name' fullname='fullName' value={fullName} type='text' onChange={fullNameHandler} />\r\n                <input  className='text-input' placeholder='E-mail' email='email' value={email} type='email' onChange={emailHandler} />\r\n                <input className='text-input' placeholder='Password' password='password' value={password} type='password' onChange={passwordHandler} />\r\n                <input className='text-input' placeholder='Confirm Password' confirmpassword='confirmPassword' value={confirmPassword} type='password' onChange={confirmPasswordHandler} />\r\n                <button className='btn-primary'>Sign Up</button>\r\n            </form>\r\n            <div className=\"heading-3\">\r\n                Already have an account? &nbsp;\r\n                <span>\r\n                    <button className=\"simple-text-button\" onClick={props.loginToogle}>Login</button>\r\n                </span>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        error:state.auth.error,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        signup:(form)=>dispatch(actions.auth(form)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignupForm);\r\n","import React,{useState} from 'react';\r\n\r\nimport LoginForm from '../Component/loginForm';\r\nimport SignupForm from '../Component/signupForm';\r\n\r\nconst Login=()=>{\r\n\r\n  const[isLogin,setIslogin]=useState(false);\r\n  const isLoginHnandler=()=>{\r\n    setIslogin(!isLogin);\r\n  }\r\n  \r\n  let loginPage=<SignupForm loginToogle={isLoginHnandler} />\r\n  if(isLogin){\r\n    loginPage=<LoginForm loginToogle={isLoginHnandler}/>\r\n  }\r\n  \r\n  return(\r\n   <div className='box-layout'>\r\n        {loginPage}\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default Login;","import React from 'react';\r\nimport sprite from '../../Styles/img/sprite.svg';\r\n\r\nfunction storyCard(props) {\r\n    return (\r\n       <div className=\"story-card\" onClick={props.postEditor}>\r\n           <div className=\"story-card__title\" onClick={props.postEditor}>{props.card.title}</div>\r\n              {(props.userId===props.card.userId)?(\r\n                  <>\r\n                <button className=\"icon-button\" onClick={props.postEditor}>\r\n                    <svg className='icon__delete'>\r\n                        <use href={sprite + '#icon-trash-can'}></use>\r\n                    </svg>\r\n                </button>\r\n                <button  className=\"icon-button\"  onClick={props.postEditor}>\r\n                    <svg className='icon__edit'>\r\n                        <use href={sprite + '#icon-document-edit'}></use>\r\n                    </svg>\r\n                </button>\r\n                </>):<div onClick={props.postEditor} />}\r\n             <div className=\"story-card__body\" onClick={props.postEditor}>\r\n             {props.card.body}\r\n             </div>\r\n               <button className=\"written-by story-card__by\" onClick={props.profileViewer}>\r\n              <div className=\"\">by-{props.card.userName}&nbsp;</div>\r\n              </button>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default storyCard\r\n","import React from \"react\";\r\n\r\nconst spinner = () => (\r\n  <div className=\"lds-roller\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\nexport default spinner;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Textarea from 'react-textarea-autosize';\r\n\r\n\r\nimport * as actions from \"../../Store/actions/index\";\r\nimport Spinner from \"../../Utilities/spinner\";\r\n\r\nfunction StoryModal(props) {\r\n  const [story, setStory] = useState({\r\n    title: props.card.title,\r\n    body: props.card.body,\r\n    privacy: props.card.privacy,\r\n    type: props.type,\r\n  });\r\n  const [ValidationMessage, setValidationMessage] = useState(null);\r\n  const inputChangeHandler = (e, identifier) => {\r\n    setStory({\r\n      ...story,\r\n      [identifier]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const validation = () => {\r\n    let valid = true;\r\n    if (story[\"title\"].trim() === \"\" || story[\"body\"].trim() === \"\") {\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n  const checkboxHandler = (e) => {\r\n    setStory({\r\n      ...story,\r\n      privacy: e.target.checked,\r\n    });\r\n  };\r\n  const postStoryHandler = () => {\r\n    const postStory = {\r\n      title: story[\"title\"],\r\n      body: story[\"body\"],\r\n      privacy: story[\"privacy\"],\r\n      userId: props.userId,\r\n      userName: props.userName,\r\n    };\r\n    if (validation()) {\r\n      setValidationMessage(null);\r\n      if (props.type === \"newPost\") {\r\n        props.postStory(postStory, props.token);\r\n      } else if (props.type === \"editPost\") {\r\n        props.editPost(postStory, props.card.userStoryId, props.token);\r\n      }\r\n    } else {\r\n      setValidationMessage(\r\n        <p className=\"error-modal\">One or more fields are empty.</p>\r\n      );\r\n    }\r\n  };\r\n  const deletePostHandler = () => {\r\n    props.deletePost(props.card.userStoryId, props.token);\r\n  };\r\n  let deletePostButton = \r\n    props.userId === props.card.userId ? (<><button\r\n      className=\"delete-post\" \r\n      onClick={deletePostHandler}\r\n    >\r\n      delete\r\n    </button></>): (<><button\r\n      className=\"delete-post\" \r\n      onClick={deletePostHandler}\r\n      style={{ visibility: \"hidden\" }}\r\n    >\r\n      delete\r\n    </button></>)\r\n  let checkBoxButton=props.userId === props.card.userId ? (\r\n    <>\r\n      <label>Keep private &nbsp;</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={story[\"privacy\"]}\r\n        onChange={(e) => checkboxHandler(e)}\r\n      />\r\n    </>\r\n  ) : (\r\n    <>\r\n      <label style={{ visibility: \"hidden\" }}>\r\n        Keep private &nbsp;\r\n      </label>\r\n      <input\r\n        style={{ visibility: \"hidden\" }}\r\n        type=\"checkbox\"\r\n        checked={story[\"privacy\"]}\r\n        onChange={(e) => checkboxHandler(e)}\r\n      />\r\n    </>\r\n  ) \r\n  let postButton=props.userId === props.card.userId ? (\r\n    <>\r\n      <button\r\n        className=\"submit-post\"\r\n        onClick={postStoryHandler}\r\n      >\r\n        post\r\n      </button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <button\r\n        className=\"submit-post\"\r\n        style={{ visibility: \"hidden\" }}\r\n        onClick={postStoryHandler}\r\n      >\r\n        post\r\n      </button>\r\n    </>\r\n  )\r\n  \r\n  if (props.type === \"newPost\") {\r\n    deletePostButton = (\r\n      <button className=\"delete-post\"\r\n      style={{ visibility: \"hidden\" }} \r\n      onClick={deletePostHandler}>\r\n        delete\r\n      </button>\r\n    );\r\n    checkBoxButton= <>\r\n    <label>Keep private &nbsp;</label>\r\n    <input\r\n      type=\"checkbox\"\r\n      checked={story[\"privacy\"]}\r\n      onChange={(e) => checkboxHandler(e)}\r\n    />\r\n  </>\r\n  postButton=<button\r\n  className=\"submit-post\"\r\n  onClick={postStoryHandler}\r\n>\r\n  post\r\n</button>\r\n  }\r\n  // console.log(props.card)\r\n  return (\r\n    <div className=\"box\">\r\n      {props.show ? (\r\n        <div\r\n          className=\"backdrop\"\r\n          onClick={props.closeModal}\r\n          style={{\r\n            opacity: props.show ? \"1\" : \"0\",\r\n            transition: \"opacity 1s linear\",\r\n          }}\r\n        ></div>\r\n      ) : null}\r\n      {props.show ? (\r\n        <div className=\"container\">\r\n          <div\r\n            className=\"storyModal\"\r\n            style={{\r\n              // transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n              opacity: props.show ? \"1\" : \"0\",\r\n              transition: \"opacity 1s linear\",\r\n            }}\r\n          >\r\n            {ValidationMessage}\r\n            {!props.loading ? (\r\n              <>\r\n                <form>\r\n                  <input\r\n                    className=\"modal-title\"\r\n                    placeholder=\"Name of your Story\"\r\n                    value={story[\"title\"]}\r\n                    onChange={(e) => inputChangeHandler(e, \"title\")}\r\n                  ></input>\r\n                  <Textarea \r\n                    className=\"modal-body\"\r\n                    placeholder=\"text\"\r\n                    value={story[\"body\"]}\r\n                    minRows={5} \r\n                    maxRows={25}\r\n                    onChange={(e) => inputChangeHandler(e, \"body\")}\r\n                  ></Textarea>\r\n                </form>\r\n                <div className=\"modal-footer\">\r\n                  {checkBoxButton}\r\n                  {deletePostButton}\r\n                  {postButton}\r\n                  <button\r\n                    className=\"close-post\"\r\n                    onClick={() => props.closeModal()}\r\n                  >\r\n                    close\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <Spinner />\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.modal.loading,\r\n    error: state.modal.error,\r\n    show: state.modal.show,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    userName: state.auth.userName,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    postStory: (story, token) => dispatch(actions.postingStory(story, token)),\r\n    deletePost: (storyId, token) =>\r\n      dispatch(actions.deleteStory(storyId, token)),\r\n    editPost: (story, storyId, token) =>\r\n      dispatch(actions.patchStory(story, storyId, token)),\r\n    closeModal: () => dispatch(actions.modalClose()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StoryModal);\r\n","import React from 'react';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className='backdrop' onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Backdrop from './backdrop';\r\n\r\nconst modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <Backdrop show={props.show} clicked={props.modalClosed} />\r\n      <div\r\n        className='Modal'\r\n        style={{\r\n          transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n          opacity: props.show ? '1' : '0'\r\n        }}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default modal;\r\n  \r\n","import React from 'react';\r\n\r\nimport Modal from '../Utilities/modal';\r\nimport useHttpErrorHandler from '../Utilities/useHttp-error-handler';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return props => {\r\n      const [error, clearError] = useHttpErrorHandler(axios);\r\n  \r\n      return (\r\n        <>\r\n          <Modal show={error} modalClosed={clearError}>\r\n            {error ? error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...props} />\r\n        </>\r\n      );\r\n    };\r\n  };\r\n  \r\n  export default withErrorHandler;","import { useState, useEffect } from 'react';\r\n\r\nexport default httpClient => {\r\n    const [error, setError] = useState(null);\r\n\r\n    const reqInterceptor = httpClient.interceptors.request.use(req => {\r\n      setError(null);\r\n      return req;\r\n    });\r\n    const resInterceptor = httpClient.interceptors.response.use(\r\n      res => res,\r\n      err => {\r\n        setError(err);\r\n        return Promise.reject(err);\r\n      }\r\n    );\r\n    useEffect(() => {\r\n      return () => {\r\n        httpClient.interceptors.request.eject(reqInterceptor);\r\n        httpClient.interceptors.response.eject(resInterceptor);\r\n      };\r\n    }, [reqInterceptor, resInterceptor,httpClient]);\r\n\r\n    const errorConfirmedHandler = () => {\r\n      setError(null);\r\n    };\r\n\r\n    return [error, errorConfirmedHandler];\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport StoryCard from \"../components/storyCard\";\r\nimport * as actions from \"../../Store/actions/index\";\r\nimport Spinner from \"../../Utilities/spinner\";\r\nimport StoryModal from \"../../Home/components/storyModel\";\r\nimport axios from \"../../axios\";\r\nimport withErrorHandler from \"../../Hoc/withErrorHandler\";\r\n\r\nfunction Stories(props) {\r\n  const [storyModal, setStoryModal] = useState(null);\r\n  const { fetchStories, token } = props;\r\n  const viewProfileHandler = () => {\r\n    const uid = props.userId;\r\n    props.history.push(\"/profile/\" + uid);\r\n  };\r\n  const ProfileHandler = (uid) => {\r\n    props.history.push(\"/profile/\" + uid);\r\n  };\r\n  const postEditorHandler = (type, data) => {\r\n    setStoryModal(<StoryModal type={type} card={data} />);\r\n    props.storyModalOpen();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStories(token);\r\n  }, [fetchStories, token]);\r\n\r\n  const [stories, setStories] = useState([]);\r\n  const { storiesArray } = props;\r\n  useEffect(() => {\r\n    setStories(storiesArray); \r\n  }, [storiesArray]);\r\n  const divideStories = (publicStories) => {\r\n    var total = publicStories.length;\r\n    var each = total / 3;\r\n    var left = total - 3*Math.floor(total/ 3);\r\n    var f, s ;\r\n    var  fe, ss, se;\r\n    f = s = each;\r\n    if (left === 1) {\r\n      f += 1;\r\n    } else if (left === 2) {\r\n      f +=1;\r\n      s += 1;\r\n    }\r\n    // fs=0;\r\n    fe=f-1;\r\n    ss=fe+1;\r\n    se=fe+s;\r\n    // ts=se+1;\r\n    // te=total-1;\r\n    return { fe,ss, se };\r\n  };\r\n  let storyCards=null\r\n  let storyCol1=[]\r\n  let storyCol2=[]\r\n  let storyCol3=[]\r\n  if (stories.length!==0) { \r\n    const publicStories = stories.filter((card) => card.privacy === false);\r\n      publicStories.forEach((card, i) => {\r\n      const {fe,ss, se}=divideStories(publicStories);\r\n      if(i<=fe){\r\n        storyCol1.push(<StoryCard\r\n          key={card.title + i}\r\n          postEditor={() => postEditorHandler(\"editPost\", card)}\r\n          profileViewer={() => ProfileHandler(card.userId)}\r\n          card={card}\r\n          userId={props.userId}\r\n        />)\r\n      }else if(i<=se && i>=ss){\r\n        storyCol2.push(<StoryCard\r\n          key={card.title + i}\r\n          postEditor={() => postEditorHandler(\"editPost\", card)}\r\n          profileViewer={() => ProfileHandler(card.userId)}\r\n          card={card}\r\n          userId={props.userId}\r\n        />)\r\n      }else{\r\n        storyCol3.push(<StoryCard\r\n          key={card.title + i}\r\n          postEditor={() => postEditorHandler(\"editPost\", card)}\r\n          profileViewer={() => ProfileHandler(card.userId)}\r\n          card={card}\r\n          userId={props.userId}\r\n        />)\r\n      }\r\n    });\r\n  }\r\n  if (stories.length === 0) {\r\n    storyCards = <h1>No Post Found</h1>;\r\n  } \r\n  return (\r\n    <>\r\n      {!props.loading ? (\r\n        <>\r\n          {props.storyModalReset ? storyModal : null}\r\n          <div className=\"introHeader\">\r\n            <h1 className=\"heading-1 intro\">Everone Has Story to Tell</h1>\r\n            <h3 className=\"line\">Show your story to world</h3>\r\n            <button\r\n              className=\"btn-primary pro-btn\"\r\n              onClick={viewProfileHandler}\r\n            >\r\n              Veiw Profile\r\n            </button>\r\n          </div>\r\n          <div className=\"container-header\">Public Stories</div>\r\n          <div className='grid-container'>\r\n            {storyCards}\r\n          <div className=\"stories\">{storyCol1}</div>\r\n          <div className=\"stories\">{storyCol2}</div>\r\n          <div className=\"stories\">{storyCol3}</div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"stories-spinner\">\r\n          <Spinner />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.stories.loading,\r\n    storiesArray: state.stories.stories,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    storyModalReset: state.modal.show,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchStories: (token) => dispatch(actions.fetchingStory(token)),\r\n    storyModalOpen: () => dispatch(actions.modalOpen()),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Stories, axios));\r\n","import React from 'react'\r\n\r\nfunction  profileEditModel(props) {\r\n    return (\r\n        <div className='profile-edit-form'>\r\n           <input className='profile-input' type=\"text\" onChange={props.onChange} value={props.value}/>\r\n           <div className='profile-input-button-box'>\r\n               <button className='profile-input-button' onClick={props.cancel}>Cancel</button>\r\n               <button className='profile-input-button' onClick={props.save}>Save</button>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default profileEditModel\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBzOU2zSdEfJJ2fBMR3piZK9jH_q6g9nPQ\",\r\n  authDomain: \"storyclub-734f8.firebaseapp.com\",\r\n  databaseURL: \"https://storyclub-734f8.firebaseio.com\",\r\n  projectId: \"storyclub-734f8\",\r\n  storageBucket: \"storyclub-734f8.appspot.com\",\r\n  messagingSenderId: \"711083344387\",\r\n  appId: \"1:711083344387:web:254d76e701958f3b45c436\",\r\n  measurementId: \"G-6ST820T6GL\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nconst storage=firebase.storage()\r\n\r\nexport {\r\n    storage,firebase as default\r\n};","import React, { useRef, useState, useEffect,useCallback } from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport sprite from \"../Styles/img/sprite.svg\";\r\nimport {storage} from \"./firebase\";\r\nimport * as actions from '../Store/actions/modalAction';\r\n\r\nconst ImageUpload = (props) => {\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  // const [progress, setProgress] = useState(0);\r\n  const [file, setFile] = useState()\r\n  const{userId,token,updateProfilePic,loggedInUser,userDataId,image}=props;\r\n  const filePickerRef = useRef();\r\n  // console.log(file)\r\n  // console.log(progress)\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n    }\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n  \r\n  const uploadHandler = useCallback(() => {\r\n    const uploadTask = storage.ref(`images/${file.name}`).put(file);\r\n    uploadTask.on(\"state_changed\", (snapshot) => {\r\n      // progress function ...\r\n      // const progress = Math.round(\r\n      //   (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n      // );\r\n    // setProgress(progress);\r\n    },\r\n    error => {\r\n      // Error function ...\r\n      console.log(error);\r\n    },\r\n    () => {\r\n      // complete function ...\r\n      storage\r\n        .ref(\"images\")\r\n        .child(file.name)\r\n        .getDownloadURL()\r\n        .then(url => {\r\n          const userPic={userPic:url}\r\n          updateProfilePic(userDataId,token,userPic);\r\n          // console.log(loggedInUser,userId);\r\n        });\r\n    }\r\n    );\r\n  },[token,updateProfilePic,userDataId,file]);\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n    uploadHandler();\r\n  }, [file,uploadHandler]);\r\n\r\n  return (\r\n    <div className=\"user-profile\">\r\n      <div className=\"user-image\">\r\n        {image && <img src={image} alt=\"User Pic\" />}\r\n        {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n        {(previewUrl || image)?null: (\r\n          <svg className=\"icon-user\">\r\n            <use href={sprite + \"#icon-user\"}></use>\r\n          </svg>\r\n        )}\r\n        <input\r\n          id={props.id}\r\n          ref={filePickerRef}\r\n          style={{ display: \"none\" }}\r\n          type=\"file\"\r\n          accept=\".jpg,.png,.jpeg\"\r\n          onChange={pickedHandler}\r\n        />\r\n        {(loggedInUser===userId)?\r\n        (<button className=\"img-button\" onClick={pickImageHandler}>\r\n          <div className=\"image\">\r\n            <svg className=\"icon-image\">\r\n              <use href={sprite + \"#icon-image\"}></use>\r\n            </svg>\r\n            <p className=\"caption\">Upload Profile pic</p>\r\n          </div>\r\n        </button>):null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return{\r\n    token:state.auth.token,\r\n    loggedInUser:state.auth.userId,\r\n    userDataId:state.stories.userData.userDataId,\r\n    userId:state.stories.userData.userId,\r\n    image:state.stories.userData.userPic,\r\n  }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return {\r\n    updateProfilePic:(userDataId,token,useProfile)=>dispatch(actions.editProfile(userDataId,token,useProfile))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ImageUpload);\r\n","import React, { useState,useEffect} from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport sprite from \"../../Styles/img/sprite.svg\";\r\nimport StoryCard from \"../../Home/components/storyCard\";\r\nimport ProfileEditModel from \"../../Home/components/profileEditModel\";\r\nimport Spinner from '../../Utilities/spinner';\r\nimport * as actions from '../../Store/actions/index';\r\nimport StoryModal from '../../Home/components/storyModel';\r\nimport axios from \"../../axios\";\r\nimport ImageUpload from '../../Utilities/imageUpload';\r\nimport withErrorHandler from \"../../Hoc/withErrorHandler\";\r\n\r\nfunction Profile(props) { \r\n  const [profileDetails, setProfileDetails] = useState({\r\n    coverQuote: \"\",\r\n    bio: \"\",\r\n    location: \"\",\r\n    coverQuotePrev: \"\",\r\n    bioPrev: \"\",\r\n    locationPrev: \"\",\r\n    coverQuoteDisplay: false,\r\n    bioDisplay: false,\r\n    locationDisplay: false,\r\n  });\r\n  const [storyModal, setStoryModal] = useState(null)\r\n\r\n  const handleEditFormDisplay = (toEdit) => {\r\n    const toEditDisplay = toEdit + \"Display\";\r\n    setProfileDetails({\r\n      ...profileDetails,\r\n      [toEditDisplay]: true,\r\n    });\r\n  };\r\n  const inputChangeHandler=(e,identifier)=>{\r\n       setProfileDetails({\r\n           ...profileDetails,\r\n           [identifier]:e.target.value,\r\n       })\r\n  }\r\n  const cancelEditHandler=(toCancel)=>{\r\n    const toCancelDisplay=toCancel+'Display';\r\n    const toCancelPrev=toCancel+'Prev'\r\n    setProfileDetails({\r\n        ...profileDetails,\r\n        [toCancelDisplay]:false,\r\n        [toCancel]:profileDetails[toCancelPrev]\r\n    })\r\n  }\r\n  const saveEditHandler=(toSave)=>{\r\n    const toSaveDisplay=toSave+'Display';\r\n    setProfileDetails({\r\n      ...profileDetails,\r\n      [toSaveDisplay]:false,\r\n  })\r\n  const userProfile={\r\n   coverQuote: profileDetails['coverQuote'],\r\n    bio:profileDetails['bio'],\r\n    location:profileDetails['location'],\r\n  };\r\n  // console.log(userProfile)\r\n  props.editProfile(props.userData.userDataId,props.token,userProfile)\r\n  }\r\n  const newPostHandler = () => {\r\n    setStoryModal(<StoryModal type='newPost' card={{title:\"\",body:\"\",privacy:false}}/>)\r\n    props.storyModalOpen();\r\n  };\r\n  const viewProfileHandler = () => {\r\n    const uid=props.loggedInUserId;\r\n    props.history.push('/profile/'+uid)\r\n  };\r\n  const postEditorHandler = (type,data) => {\r\n    // console.log(data,'data')\r\n    setStoryModal(<StoryModal type={type} card={data}/>)\r\n    props.storyModalOpen();\r\n  };\r\n  \r\n  const {fetchUserProfile,token,userData,loadingUserStory,loadingUserData}=props;\r\n  let userId=props.match.params.uid\r\n  useEffect(() => {\r\n    fetchUserProfile(userId,token);\r\n    \r\n  }, [fetchUserProfile,userId,token])\r\n  \r\n  useEffect(()=>{\r\n    if(!loadingUserData && !loadingUserStory){\r\n       setProfileDetails({\r\n        coverQuote: userData.coverQuote,\r\n        bio: userData.bio,\r\n        location: userData.location,\r\n        coverQuotePrev: userData.coverQuote,\r\n        bioPrev: userData.bio,\r\n        locationPrev: userData.location,\r\n        coverQuoteDisplay: false,\r\n        bioDisplay: false,\r\n        locationDisplay: false,\r\n       })\r\n      }\r\n  },[userData,loadingUserData,loadingUserStory])\r\n\r\n  const divideStories = (publicStories) => {\r\n    var total = publicStories.length;\r\n    var each = total / 3;\r\n    var left = total - 3*Math.floor(total/ 3);\r\n    var f, s ;\r\n    var  fe, ss, se;\r\n    f = s = each;\r\n    if (left === 1) {\r\n      f += 1;\r\n    } else if (left === 2) {\r\n      f +=1;\r\n      s += 1;\r\n    }\r\n    // fs=0;\r\n    fe=f-1;\r\n    ss=fe+1;\r\n    se=fe+s;\r\n    // ts=se+1;\r\n    // te=total-1;\r\n    return { fe,ss, se };\r\n  };\r\n  let storyCards=null\r\n  let storyCol1=[]\r\n  let storyCol2=[]\r\n  let storyCol3=[]\r\n  if(!props.loadingUserData && !props.loadingUserStory){\r\n  props.stories.forEach((card, i) => {\r\n    const {fe,ss, se}=divideStories(props.stories);\r\n    if(i<=fe){\r\n      storyCol1.push(<StoryCard\r\n        key={card.title + i}\r\n        postEditor={() => postEditorHandler(\"editPost\", card)}\r\n       profileViewer={viewProfileHandler}\r\n        card={card}\r\n        userId={props.loggedInUserId}\r\n      />)\r\n    }else if(i<=se && i>=ss){\r\n      storyCol2.push(<StoryCard\r\n        key={card.title + i}\r\n        postEditor={() => postEditorHandler(\"editPost\", card)}\r\n       profileViewer={viewProfileHandler}\r\n        card={card}\r\n        userId={props.loggedInUserId}\r\n      />)\r\n    }else{\r\n      storyCol3.push(<StoryCard\r\n        key={card.title + i}\r\n        postEditor={() => postEditorHandler(\"editPost\", card)}\r\n       profileViewer={viewProfileHandler}\r\n        card={card}\r\n        userId={props.loggedInUserId}\r\n      />)\r\n    }\r\n  });\r\n  if(props.stories.length===0){\r\n    storyCards=<h1>No Post Found</h1>\r\n  }\r\n}\r\n\r\n  return (\r\n    <>\r\n    {props.storyModalReset?storyModal:null}\r\n    {(props.loadingUserData || props.loadingUserStory)?\r\n    <div className='stories-spinner'><Spinner/></div>:\r\n    <>\r\n      <div>\r\n        <div className=\"introHeader\">\r\n          {!profileDetails[\"coverQuoteDisplay\"] ? (\r\n            <div className=\"header\">\r\n              <p>{profileDetails['coverQuote']}</p>\r\n              {(userId===props.loggedInUserId)?(<button\r\n                className=\"header-button\"\r\n                onClick={() => handleEditFormDisplay(\"coverQuote\")}\r\n              >\r\n                <svg className=\"icon-pencil\">\r\n                  <use href={sprite + \"#icon-pencil\"}></use>\r\n                </svg>\r\n              </button>):null}\r\n              \r\n            </div>\r\n          ) : (\r\n            <ProfileEditModel onChange={(e)=>inputChangeHandler(e,'coverQuote')} \r\n            value={profileDetails['coverQuote']}\r\n            cancel={()=>cancelEditHandler('coverQuote')}\r\n            save={()=>saveEditHandler('coverQuote')}/>\r\n          )}\r\n        </div>\r\n        <ImageUpload/>\r\n        <div className=\"sub-header\">\r\n          <div className=\"sub-items\">\r\n          <h2 className=\"name\">{props.userData.fullName}</h2>\r\n            {!profileDetails[\"bioDisplay\"] ? (\r\n              <div className=\"company\">\r\n                <p>{profileDetails['bio']}</p>\r\n                {(userId===props.loggedInUserId)?( <button\r\n                  className=\"pencil-button\"\r\n                  onClick={() => handleEditFormDisplay(\"bio\")}\r\n                >\r\n                  <svg className=\"icon-pencil__edit\">\r\n                    <use href={sprite + \"#icon-pencil\"}></use>\r\n                  </svg>\r\n                </button>):null}\r\n               \r\n              </div>\r\n            ) : (\r\n              <ProfileEditModel onChange={(e)=>inputChangeHandler(e,'bio')} value={profileDetails['bio']} \r\n              cancel={()=>cancelEditHandler('bio')}\r\n              save={()=>saveEditHandler('bio')}/>\r\n            )}\r\n            {!profileDetails[\"locationDisplay\"] ? (\r\n              <div className=\"place\">\r\n                <p>{profileDetails['location']}</p>\r\n                {(userId===props.loggedInUserId)?(<button\r\n                  className=\"pencil-button\"\r\n                  onClick={() => handleEditFormDisplay(\"location\")}\r\n                >\r\n                  <svg className=\"icon-pencil__edit\">\r\n                    <use href={sprite + \"#icon-pencil\"}></use>\r\n                  </svg>\r\n                </button>):null}\r\n                \r\n              </div>\r\n            ) : (\r\n              <ProfileEditModel onChange={(e)=>inputChangeHandler(e,'location')} value={profileDetails['location']}\r\n               cancel={()=>cancelEditHandler('location')}\r\n               save={()=>saveEditHandler('location')}/>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"profile\">\r\n      {(userId===props.loggedInUserId)?(<div className=\"new-post\" onClick={newPostHandler}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Post New Story\"\r\n            className=\"inputStyle\"\r\n          />\r\n          <svg className=\"pencil-new-post__edit\">\r\n            <use href={sprite + \"#icon-pencil\"}></use>\r\n          </svg>\r\n        </div>):null}\r\n        \r\n        <div className=\"container-header\">Recent Posts</div>\r\n       <div className='grid-container'>\r\n            {storyCards}\r\n          <div className=\"stories\">{storyCol1}</div>\r\n          <div className=\"stories\">{storyCol2}</div>\r\n          <div className=\"stories\">{storyCol3}</div>\r\n          </div>\r\n      </div>\r\n      </>}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    loggedInUserId:state.auth.userId,\r\n    token:state.auth.token,\r\n    stories:state.stories.stories,\r\n    loadingUserStory:state.stories.loadingUserStory,\r\n    loadingUserData:state.stories.loadingUserData,\r\n    userData:state.stories.userData,\r\n    errorUserStory:state.stories.errorUserStory,\r\n    errorUserData:state.stories.errorUserData,\r\n    storyModalReset:state.modal.show,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    fetchUserProfile:(userId,token)=>dispatch(actions.fetchUserProfile(userId,token)),\r\n    editProfile:(userId,token,useProfile)=>dispatch(actions.editProfile(userId,token,useProfile)),\r\n    storyModalOpen:()=>dispatch(actions.modalOpen())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Profile,axios));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n const PublicRoute = ({ isAuthenticated,component:Component,...rest }) => (\r\n  <div>\r\n    <Route\r\n      {...rest}\r\n      component={props=>\r\n        isAuthenticated ? <Redirect to=\"/home\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token != null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport * as actions from '../Store/actions/index';\r\n\r\nfunction Navigation(props) {\r\n\r\n    const logoutHandler=()=>{\r\n       props.logout();\r\n       props.history.push('/'); \r\n    }\r\n    const homePageHandler=()=>{\r\n        props.history.push('/home'); \r\n    }\r\n    return (\r\n        <div className='navigation'>\r\n            <button className=\"home-button heading-1\" onClick={homePageHandler}>Storyclub</button>\r\n            <button className=\"simple-text-button logout-button heading-3\" onClick={logoutHandler}>logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        logout:()=>dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Navigation);\r\n\r\n                            ","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Header from \"../Header/navigation\";\r\n\r\nexport const PrivateRoute = ({ isAuthenticated,component:Component ,...rest }) => {\r\n  // console.log(isAuthenticated,Component,rest)\r\n  return(\r\n  <div>\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? (\r\n          <div>\r\n            <Header {...props}/>\r\n            <Component {...props} />\r\n          </div>\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  </div>\r\n);\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token != null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react'\r\n\r\nfunction notFoundPage(props) {\r\n    return (\r\n        <div className='text'>\r\n          <b> 404-Page Not Found</b>\r\n          <button className='redirectButton' onClick={()=>props.history.push('/home')}>Go To Homepage</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default notFoundPage\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Login from \"./User/Pages/login\";\r\nimport Stories from \"./Home/pages/stories\";\r\nimport Profile from \"./Home/pages/profile\";\r\nimport * as actions from \"./Store/actions/index\";\r\nimport PublicRoute from \"./Router/publicRoute\";\r\nimport PrivateRoute from \"./Router/privateRoute\";\r\nimport NotFoundPage from \"./Home/pages/notFoundPage\";\r\n\r\nfunction App(props) {\r\nconst{onTryAutoSignup}=props\r\n    onTryAutoSignup();\r\n\r\n  const routes = (\r\n    <Switch>\r\n      <PublicRoute path=\"/\" exact component={Login} />\r\n      <PrivateRoute path=\"/home\" exact component={Stories} />\r\n      <PrivateRoute path=\"/profile/:uid\" exact component={Profile} />\r\n      <PrivateRoute path=\"/StoryClub\" exact component={Stories} />\r\n      <Route component={NotFoundPage} />\r\n    </Switch>\r\n  );\r\n\r\n  return <div>{routes}</div>;\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject=(oldObject,updatedProperties)=>{\r\n    return{\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst intialState = {\r\n  loading: false,\r\n  error: null,\r\n  show: false,\r\n};\r\n\r\nconst postStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true,\r\n    error: null,\r\n  });\r\n};\r\nconst postSucced = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    show: false,\r\n  });\r\n};\r\nconst postFailed = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    error: action.error,\r\n  });\r\n};\r\nconst modalClose = (state, action) => {\r\n  return updateObject(state, { show: false });\r\n};\r\nconst modalOpen = (state, action) => {\r\n  return updateObject(state, { show: true });\r\n};\r\n\r\nconst reducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.POSTING_STORY_START:\r\n      return postStart(state, action);\r\n    case actionTypes.POSTING_STORY_SUCCESS:\r\n      return postSucced(state, action);\r\n    case actionTypes.POSTING_STORY_FAIL:\r\n      return postFailed(state, action);\r\n    case actionTypes.MODAL_CLOSE:\r\n      return modalClose(state, action);\r\n    case actionTypes.MODAL_OPEN:\r\n      return modalOpen(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst intialState={\r\n    token:null,\r\n    userId:null,\r\n    error:null,\r\n    loading:false,\r\n    userName:null,\r\n}\r\n\r\nconst authStart=(state,action)=>{\r\n    return updateObject(state,{error:null,loading:true})\r\n};\r\n\r\nconst authFail=(state,action)=>{\r\n    return updateObject(state,{\r\n        error:action.error,\r\n        loading:false\r\n    });\r\n};\r\n\r\nconst authSuccess=(state,action)=>{\r\n    return updateObject(state,{\r\n        token:action.idToken,\r\n        userId:action.userId,\r\n        userName:action.userName,\r\n        error:null,\r\n        loading:false,\r\n    });\r\n};\r\n\r\nconst authLogout=(state,action)=>{\r\n    return updateObject(state,{\r\n        token:null,\r\n        userId:null,\r\n    });\r\n};\r\n\r\nconst authRedirectPath=(state,action)=>{\r\n    return updateObject(state,{\r\n    })\r\n}\r\n\r\nconst reducer=(state=intialState,action)=>{\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START: return authStart(state,action);\r\n        case actionTypes.AUTH_SUCCESS:return authSuccess(state,action);\r\n        case actionTypes.AUTH_FAIL:return authFail(state,action);\r\n        case actionTypes.AUTH_LOGOUT:return authLogout(state,action); \r\n        case actionTypes.AUTH_REDIRECT_PATH:return authRedirectPath(state,action);\r\n        default:\r\n            return state;      \r\n    };\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst intialState = {\r\n  loading: true,\r\n  error: null,\r\n  stories: [],\r\n  userData: null,\r\n  loadingUserData: true,\r\n  loadingUserStory: true,\r\n  errorUserData: null,\r\n  errorUserStory: null,\r\n  // updatedStory: null,\r\n  // deletedStoryId: null,\r\n  // updatedProfile: null,\r\n  // addedStory: null,\r\n};\r\n\r\nconst fetchingStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true,\r\n  });\r\n};\r\nconst fetchingSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    stories: action.stories,\r\n    loading: false,\r\n  });\r\n};\r\nconst fetchingFailed = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: false,\r\n    error: action.error,\r\n  });\r\n};\r\nconst fetchUserDataSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loadingUserData: false,\r\n    userData: action.userData,\r\n  });\r\n};\r\nconst fetchUserStorySuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    loadingUserStory: false,\r\n    stories: action.userStory,\r\n  });\r\n};\r\nconst fetchUserDataFail = (state, action) => {\r\n  return updateObject(state, {\r\n    // loadingUserData: false,\r\n    errorUserData: action.userDataError,\r\n  });\r\n};\r\nconst fetchUserStoryFail = (state, action) => {\r\n  return updateObject(state, {\r\n    loadingUserStory: false,\r\n    errorUserStory: action.userStoryError,\r\n  });\r\n};\r\nconst fetchUserDataStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loadingUserData: true,\r\n  });\r\n};\r\nconst fetchUserStoryStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loadingUserStory: true,\r\n  });\r\n};\r\nconst updatedStory = (state, action) => {\r\n  // return updateObject(state, { updatedStory: action.updatedStory });\r\n  const stories=state.stories.map((story)=>{\r\n    if(action.updatedStory.userStoryId===story.userStoryId){\r\n      return action.updatedStory\r\n    }else{\r\n      return story;\r\n    }\r\n  })\r\n  return updateObject(state,{stories})\r\n};\r\nconst addedStory = (state, action) => {\r\n  // return updateObject(state, { addedStory: action.addedPost });\r\n  const stories=state.stories.concat(action.addedPost)\r\n  return updateObject(state,{stories})\r\n};\r\nconst deletedStory = (state, action) => {\r\n  // return updateObject(state, { deletedStoryId: action.storyId });\r\n  const stories= state.stories.filter((story)=> story.userStoryId!==action.storyId)\r\n  return updateObject(state,{stories})\r\n};\r\nconst updatedProfile = (state, action) => {\r\n  // return updateObject(state, { updatedProfile: action.updatedProfile });\r\n  const userData={\r\n    ...state.userData,\r\n    ...action.updatedProfile,\r\n  }\r\n  return updateObject(state,{userData})\r\n};\r\nconst reducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCHING_STORY_START:\r\n      return fetchingStart(state, action);\r\n    case actionTypes.FETCHING_STORY_SUCCESS:\r\n      return fetchingSuccess(state, action);\r\n    case actionTypes.FETCHING_STORY_FAIL:\r\n      return fetchingFailed(state, action);\r\n    case actionTypes.FETCH_USER_DATA_SUCCESS:\r\n      return fetchUserDataSuccess(state, action);\r\n    case actionTypes.FETCH_USER_STORY_SUCCESS:\r\n      return fetchUserStorySuccess(state, action);\r\n    case actionTypes.FETCH_USER_DATA_START:\r\n      return fetchUserDataStart(state, action);\r\n    case actionTypes.FETCH_USER_STORY_START:\r\n      return fetchUserStoryStart(state, action);\r\n    case actionTypes.FETCH_USER_DATA_FAIL:\r\n      return fetchUserDataFail(state, action);\r\n    case actionTypes.FETCH_USER_STORY_FAIL:\r\n      return fetchUserStoryFail(state, action);\r\n    case actionTypes.UPDATED_PROFILE:\r\n      return updatedProfile(state, action);\r\n    case actionTypes.UPDATED_STORY:\r\n      return updatedStory(state, action);\r\n    case actionTypes.DELETED_STORY:\r\n      return deletedStory(state, action);\r\n    case actionTypes.ADDED_STORY:\r\n      return addedStory(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport {createStore,applyMiddleware,compose,combineReducers} from 'redux';\r\n\r\nimport './Styles/main.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport modalReducer from '../src/Store/reducers/modalReducer';\r\nimport authReducer from '../src/Store/reducers/authReducer';\r\nimport storiesReducer from '../src/Store/reducers/storiesReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer=combineReducers({\r\n      auth:authReducer,\r\n      modal:modalReducer,\r\n      stories:storiesReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n      <BrowserRouter>\r\n          <App />\r\n      </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {app}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}